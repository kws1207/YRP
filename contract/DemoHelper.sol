
/*
    Helper functions for demo
*/
// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import "./Datastructure.sol";

library DemoHelper {

    function setXrpPrices(mapping(int => int) storage xrpPrices) public {
        xrpPrices[0] = 0.540993 ether;
        xrpPrices[1] = 0.542223 ether;
        xrpPrices[2] = 0.546295 ether;
        xrpPrices[3] = 0.550546 ether;
        xrpPrices[4] = 0.549532 ether;
        xrpPrices[5] = 0.552032 ether;
        xrpPrices[6] = 0.558158 ether;
        xrpPrices[7] = 0.559035 ether;
        xrpPrices[8] = 0.559061 ether;
        xrpPrices[9] = 0.563585 ether;
        xrpPrices[10] = 0.564073 ether;
    }

    function setInitialBettings(mapping(int => DataStructs.Bet[]) storage bets) public {
        uint8[3][124] memory data = [
            [0, 51, 1],
            [0, 52, 2],
            [0, 53, 4],
            [0, 54, 10],
            [0, 55, 5],
            [0, 56, 2],
            [0, 56, 1],
            [0, 60, 1],
            [1, 53, 4],
            [1, 54, 8],
            [1, 55, 7],
            [1, 56, 1],
            [1, 57, 1],
            [1, 59, 1],
            [2, 53, 2],
            [2, 54, 8],
            [2, 55, 9],
            [2, 56, 3],
            [3, 53, 1],
            [3, 54, 5],
            [3, 55, 9],
            [3, 56, 7],
            [3, 56, 2],
            [3, 59, 1],
            [4, 53, 2],
            [4, 54, 5],
            [4, 55, 9],
            [4, 56, 4],
            [4, 60, 1],
            [5, 52, 1],
            [5, 54, 3],
            [5, 55, 10],
            [5, 56, 8],
            [5, 56, 2],
            [5, 59, 1],
            [5, 60, 1],
            [6, 53, 1],
            [6, 54, 1],
            [6, 55, 6],
            [6, 56, 10],
            [6, 56, 3],
            [6, 60, 1],
            [7, 52, 1],
            [7, 54, 2],
            [7, 55, 7],
            [7, 56, 8],
            [7, 56, 6],
            [7, 59, 1],
            [8, 53, 1],
            [8, 54, 2],
            [8, 55, 6],
            [8, 56, 10],
            [8, 56, 6],
            [8, 59, 1],
            [8, 60, 1],
            [9, 52, 1],
            [9, 53, 1],
            [9, 54, 1],
            [9, 55, 2],
            [9, 56, 8],
            [9, 56, 8],
            [9, 57, 1],
            [9, 59, 1],
            [9, 60, 1],
            [10, 51, 1],
            [10, 54, 1],
            [10, 55, 4],
            [10, 56, 10],
            [10, 56, 8],
            [10, 57, 2],
            [11, 55, 3],
            [11, 56, 8],
            [11, 56, 10],
            [11, 57, 3],
            [11, 59, 1],
            [12, 52, 1],
            [12, 56, 4],
            [12, 56, 10],
            [12, 57, 7],
            [12, 59, 1],
            [12, 60, 1],
            [13, 53, 1],
            [13, 55, 2],
            [13, 56, 7],
            [13, 56, 9],
            [13, 57, 4],
            [14, 52, 1],
            [14, 54, 1],
            [14, 56, 4],
            [14, 56, 8],
            [14, 57, 5],
            [14, 59, 2],
            [14, 60, 30],
            [15, 52, 1],
            [15, 56, 3],
            [15, 56, 8],
            [15, 57, 9],
            [15, 59, 2],
            [16, 51, 1],
            [16, 52, 1],
            [16, 53, 1],
            [16, 55, 1],
            [16, 56, 1],
            [16, 56, 6],
            [16, 57, 9],
            [16, 59, 4],
            [17, 53, 1],
            [17, 56, 1],
            [17, 56, 5],
            [17, 57, 10],
            [17, 59, 7],
            [17, 60, 3],
            [18, 51, 1],
            [18, 54, 1],
            [18, 56, 5],
            [18, 57, 8],
            [18, 59, 6],
            [18, 60, 2],
            [19, 53, 1],
            [19, 54, 1],
            [19, 56, 2],
            [19, 57, 8],
            [19, 59, 7],
            [19, 60, 3]
        ];

        for (uint i = 0; i < data.length; i++) {
            uint8[3] memory cur_data = data[i];
            uint date_index = cur_data[0];
            uint price_index = cur_data[1];
            uint intensity = cur_data[2];

            bets[int(date_index)].push(
                DataStructs.Bet({
                    bettor: address(0),
                    priceRangeIndex: int(price_index),
                    value: 0.05 ether * intensity,
                    amount: int(intensity),
                    claimed: false
                })
            );
        }
    }

}